Description: Disable release notes and PegDown
 org.pegdown is not available in Debian yet, so
 disable release notes inclusion during build
 and remove PegDownProcessor.
Author: Damien Raude-Morvan <drazzib@debian.org>
Bug-Debian: http://bugs.debian.org/685874
Forwarded: not-needed
Last-Update: 2012-08-18

--- a/buildSrc/build.gradle
+++ b/buildSrc/build.gradle
@@ -40,7 +40,6 @@
     testCompile 'junit:junit4:4.x@jar'
     testCompile 'org.spockframework:spock-core:0.7-groovy-1.8@jar', 'cglib:cglib-nodep:2.2', 'org.objenesis:objenesis:1.2'
 
-    compile "org.pegdown:pegdown:1.1.0"
     compile "org.jsoup:jsoup:1.6.3"
 
     //below dependency was deployed to the repo.gradle.org
--- a/buildSrc/src/main/groovy/org/gradle/plugins/pegdown/PegDown.groovy
+++ b/buildSrc/src/main/groovy/org/gradle/plugins/pegdown/PegDown.groovy
@@ -21,9 +21,9 @@
 import org.gradle.api.tasks.SourceTask
 import org.gradle.api.tasks.OutputFile
 import org.gradle.api.tasks.TaskAction
-import org.pegdown.Extensions
+//import org.pegdown.Extensions
 import org.gradle.api.InvalidUserDataException
-import org.pegdown.PegDownProcessor
+//import org.pegdown.PegDownProcessor
 
 class PegDown extends SourceTask {
 
@@ -50,11 +50,12 @@
 
     @TaskAction
     void process() {
-        int optionsValue = getCalculatedOptions()
+        /*int optionsValue = getCalculatedOptions()
         PegDownProcessor processor = new PegDownProcessor(optionsValue)
         String markdown = getSource().singleFile.getText(getInputEncoding())
         String html = processor.markdownToHtml(markdown)
-        getDestination().write(html, getOutputEncoding())
+        getDestination().write(html, getOutputEncoding())*/
+	throw new UnsupportedOperationException("PegDown");
     }
     
     int getCalculatedOptions() {
@@ -63,11 +64,11 @@
     
     protected int toOptionValue(String optionName) {
         String upName = val.toUpperCase()
-        try {
+        /*try {
             Extensions."$upName"
         } catch (MissingPropertyException e) {
             throw new InvalidUserDataException("$optionName is not a valid PegDown extension name")
-        }
+        }*/
     }
     
     void options(String... options) {
--- a/subprojects/docs/docs.gradle
+++ b/subprojects/docs/docs.gradle
@@ -25,7 +25,6 @@
 import org.apache.tools.ant.filters.ReplaceTokens
 
 apply plugin: 'base'
-apply plugin: 'pegdown'
 apply plugin: 'jsoup'
 apply plugin: 'javascript-base'
 
@@ -364,10 +363,10 @@
     group = 'documentation'
 }
 
-import org.gradle.plugins.pegdown.PegDown
+//import org.gradle.plugins.pegdown.PegDown
 import org.gradle.plugins.jsoup.Jsoup
 
-task editReleaseNotes() {
+/*task editReleaseNotes() {
     group = "release notes"
     doLast {
         Class.forName("java.awt.Desktop").newInstance().edit(file("src/docs/release/notes.md"))
@@ -412,14 +411,14 @@
     systemProperty "org.gradle.docs.releasenotes.source", releaseNotesMarkdown.source.singleFile
     systemProperty "org.gradle.docs.releasenotes.rendered", new File(releaseNotes.destinationDir, releaseNotes.fileName)
 
-}
+}*/
 
 if (project.hasProperty('noDocsTests')) {
     gradle.startParameter.excludedTaskNames << test.path
 }
 
 task docs {
-    dependsOn javadocAll, groovydocAll, userguide, distDocs, samplesDocs, dslHtml, releaseNotes
+    dependsOn javadocAll, groovydocAll, userguide, distDocs, samplesDocs, dslHtml
     description = 'Generates all documentation'
     group = 'documentation'
 }
