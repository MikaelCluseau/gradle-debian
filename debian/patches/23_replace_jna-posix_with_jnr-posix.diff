Description: Replace jna-posix library with jnr-posix
 jna-posix is not longer supported and was replaced with jnr-posix.
Bug-vendor: http://issues.gradle.org/browse/GRADLE-2422
Author: Miguel Landaeta <miguel@miguel.cc>
Author: Damien Raude-Morvan <drazzib@debian.org>
Forwarded: no
Last-Update: 2012-08-18

--- a/subprojects/native/native.gradle
+++ b/subprojects/native/native.gradle
@@ -9,10 +9,13 @@
     compile libraries.slf4j_api
     compile libraries.jna
     compile libraries.nativePlatform
-    compile module('org.jruby.ext.posix:jna-posix:1.0.3') {
+    compile module('org.jruby.ext.posix:jnr-posix:debian') {
         dependency libraries.jna
     }
-    compile module('org.fusesource.jansi:jansi:1.2.1') {
+    compile 'org.jruby.extras:constantine:debian'
+    compile 'org.jruby.extras:jaffl:debian'
+    compile 'org.jruby.extras:jffi:debian'
+    compile module('org.fusesource.jansi:jansi:debian') {
         dependency libraries.jna
     }
     compile libraries.guava
--- a/subprojects/native/src/main/java/org/gradle/internal/nativeplatform/filesystem/FileSystemServices.java
+++ b/subprojects/native/src/main/java/org/gradle/internal/nativeplatform/filesystem/FileSystemServices.java
@@ -23,8 +23,6 @@
 import org.gradle.internal.os.OperatingSystem;
 import org.gradle.internal.service.DefaultServiceRegistry;
 import org.gradle.internal.service.ServiceRegistry;
-import org.jruby.ext.posix.BaseNativePOSIX;
-import org.jruby.ext.posix.JavaPOSIX;
 import org.jruby.ext.posix.POSIX;
 import org.slf4j.Logger;
 import org.slf4j.LoggerFactory;
@@ -61,7 +59,7 @@
         if (libC != null && (operatingSystem.isLinux() || operatingSystem.isMacOsX())) {
             FilePathEncoder filePathEncoder = createEncoder(libC);
             serviceRegistry.add(Chmod.class, new LibcChmod(libC, filePathEncoder));
-            serviceRegistry.add(Stat.class, new LibCStat(libC, operatingSystem, (BaseNativePOSIX) PosixUtil.current(), filePathEncoder));
+            serviceRegistry.add(Stat.class, new LibCStat(libC, operatingSystem, PosixUtil.current(), filePathEncoder));
             return;
         }
 
@@ -95,7 +93,7 @@
 
     private static Stat createStat() {
         POSIX posix = PosixUtil.current();
-        if (posix instanceof JavaPOSIX) {
+        if (posix.getClass().toString().equals("org.jruby.ext.posix.JavaPOSIX")) {
             return new FallbackStat();
         } else {
             return new PosixStat(posix);
--- a/subprojects/native/src/main/java/org/gradle/internal/nativeplatform/filesystem/LibCStat.java
+++ b/subprojects/native/src/main/java/org/gradle/internal/nativeplatform/filesystem/LibCStat.java
@@ -18,9 +18,8 @@
 
 import org.gradle.internal.nativeplatform.jna.LibC;
 import org.gradle.internal.os.OperatingSystem;
-import org.jruby.ext.posix.BaseNativePOSIX;
 import org.jruby.ext.posix.FileStat;
-import org.jruby.ext.posix.Linux64FileStat;
+import org.jruby.ext.posix.POSIX;
 
 import java.io.File;
 import java.io.IOException;
@@ -29,9 +28,9 @@
     private final LibC libc;
     private final FilePathEncoder encoder;
     private final OperatingSystem operatingSystem;
-    private final BaseNativePOSIX nativePOSIX;
+    private final POSIX nativePOSIX;
 
-    public LibCStat(LibC libc, OperatingSystem operatingSystem, BaseNativePOSIX nativePOSIX, FilePathEncoder encoder) {
+    public LibCStat(LibC libc, OperatingSystem operatingSystem, POSIX nativePOSIX, FilePathEncoder encoder) {
         this.libc = libc;
         this.operatingSystem = operatingSystem;
         this.nativePOSIX = nativePOSIX;
@@ -39,17 +38,7 @@
     }
 
     public int getUnixMode(File f) throws IOException {
-        FileStat stat = nativePOSIX.allocateStat();
-        initPlatformSpecificStat(stat, encoder.encode(f));
+        FileStat stat = nativePOSIX.stat(new String(encoder.encode(f)));
         return stat.mode() & 0777;
     }
-
-    private void initPlatformSpecificStat(FileStat stat, byte[] encodedFilePath) {
-        if (operatingSystem.isMacOsX()) {
-            libc.stat(encodedFilePath, stat);
-        } else {
-            final int statVersion = stat instanceof Linux64FileStat ? 3 : 0;
-            libc.__xstat64(statVersion, encodedFilePath, stat);
-        }
-    }
 }
--- a/subprojects/native/src/main/java/org/gradle/internal/nativeplatform/filesystem/PosixUtil.java
+++ b/subprojects/native/src/main/java/org/gradle/internal/nativeplatform/filesystem/PosixUtil.java
@@ -20,6 +20,8 @@
 import org.jruby.ext.posix.POSIXFactory;
 import org.jruby.ext.posix.POSIXHandler;
 
+import com.kenai.constantine.platform.Errno;
+
 import java.io.File;
 import java.io.InputStream;
 import java.io.PrintStream;
@@ -32,7 +34,7 @@
     }
 
     private static class POSIXHandlerImpl implements POSIXHandler {
-        public void error(POSIX.ERRORS error, String message) {
+        public void error(Errno error, String message) {
             throw new UnsupportedOperationException(error + " - " + message);
         }
 
