Description: Set the correct path to locate jnidispatch.so library
Author: Miguel Landaeta <miguel@miguel.cc>
Author: Damien Raude-Morvan <drazzib@debian.org
Forwarded: not-needed
Last-Update: 2012-08-18

--- a/subprojects/native/src/main/java/org/gradle/internal/nativeplatform/jna/JnaBootPathConfigurer.java
+++ b/subprojects/native/src/main/java/org/gradle/internal/nativeplatform/jna/JnaBootPathConfigurer.java
@@ -40,7 +40,7 @@
     public void configure(File storageDir) {
         String nativePrefix = OperatingSystem.current().getNativePrefix();
         File tmpDir = new File(storageDir, String.format("jna/%s", nativePrefix));
-        tmpDir.mkdirs();
+        //tmpDir.mkdirs();
         String jnaLibName = OperatingSystem.current().isMacOsX() ? "libjnidispatch.jnilib" : System.mapLibraryName("jnidispatch");
         File libFile = new File(tmpDir, jnaLibName);
         if (!libFile.exists()) {
--- a/subprojects/native/src/main/java/org/gradle/internal/nativeplatform/services/NativeServices.java
+++ b/subprojects/native/src/main/java/org/gradle/internal/nativeplatform/services/NativeServices.java
@@ -48,7 +48,7 @@
      * of a native service. Also initializes the Native-Platform library using the passed user home directory.
      */
     public static void initialize(File userHomeDir) {
-        File nativeDir = new File(userHomeDir, "native");
+        File nativeDir = new File("/usr/lib");
         if (USE_NATIVE_PLATFORM) {
             try {
                 net.rubygrapefruit.platform.Native.init(nativeDir);
