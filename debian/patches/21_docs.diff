Description: Generate javadocs and groovydocs only
 I still have to figure out how to build the rest of the documentation
 using DocBook and other libraries available in Debian.
Author: Miguel Landaeta <miguel@miguel.cc>
Forwarded: not-needed
Last-Update: 2010-11-23

--- gradle-0.9~rc3.orig/build.gradle
+++ gradle-0.9~rc3/build.gradle
@@ -247,7 +247,7 @@ zipRootFolder = "$archivesBaseName-${->
 
 binDistImage = copySpec {
     from 'src/toplevel'
-    from project(':docs').distDocs.destFile
+    //from project(':docs').distDocs.destFile
     into('bin') {
         from startScriptsDir
         fileMode = 0755
@@ -273,14 +273,16 @@ allDistImage = copySpec {
     }
 }
 
-task allZip(type: Zip, dependsOn: ['launcher:startScripts', 'docs:docs', 'docs:samples']) {
+//task allZip(type: Zip, dependsOn: ['launcher:startScripts', 'docs:docs', 'docs:samples']) {
+task allZip(type: Zip, dependsOn: ['launcher:startScripts', 'docs:docs']) {
     classifier = 'all'
     into(zipRootFolder) {
         with allDistImage
     }
 }
 
-task binZip(type: Zip, dependsOn: ['launcher:startScripts', 'docs:distDocs']) {
+//task binZip(type: Zip, dependsOn: ['launcher:startScripts', 'docs:distDocs']) {
+task binZip(type: Zip, dependsOn: ['launcher:startScripts', 'docs:docs']) {
     classifier = 'bin'
     into(zipRootFolder) {
         with binDistImage
@@ -390,7 +392,8 @@ def guessMaxForks() {
 
 task testedDists(dependsOn: [assemble, check, integTest, embeddedIntegTest, 'openApi:integTest', ':ui:integTest'])
 
-task nightlyBuild(dependsOn: [clean, testedDists, ':docs:uploadDocs'])
+//task nightlyBuild(dependsOn: [clean, testedDists, ':docs:uploadDocs'])
+task nightlyBuild(dependsOn: [clean, testedDists])
 
 task install(type: Install) {
     description = 'Installs the minimal distribution into directory $gradle_installPath'
@@ -466,7 +469,8 @@ task releaseArtifacts {
 task release {
     description = 'Builds, tests and uploads the release artifacts'
     group = 'release'
-    dependsOn releaseVersion, tag, releaseArtifacts, testedDists, uploadDists, ':docs:uploadDocs'
+    //dependsOn releaseVersion, tag, releaseArtifacts, testedDists, uploadDists, ':docs:uploadDocs'
+    dependsOn releaseVersion, tag, releaseArtifacts, testedDists, uploadDists
 }
 
 task wrapper(type: Wrapper, dependsOn: binZip)
--- gradle-0.9~rc3.orig/subprojects/gradle-docs/docs.gradle
+++ gradle-0.9~rc3/subprojects/gradle-docs/docs.gradle
@@ -28,6 +28,7 @@ configurations {
     userGuideTask
 }
 
+/*
 dependencies {
     ftpAntTask module("org.apache.ant:ant-commons-net:1.7.0") {
         module("commons-net:commons-net:1.4.1") {
@@ -43,6 +44,7 @@ dependencies {
 
     userGuideStyleSheets 'docbook:docbook-xsl:1.75.2@zip'
 }
+*/
 
 RemoteLocations remoteLocations = new RemoteLocations(version: version)
 
@@ -98,10 +100,10 @@ task userguideStyleSheets(type: Copy) {
     from(cssSrcDir) {
         include '*.css'
     }
-    from(zipTree(configurations.userGuideStyleSheets.singleFile)) {
-        // Remove the prefix
-        eachFile { fcd -> fcd.path = fcd.path.replaceFirst('^docbook-xsl-[0-9\\.]+/', '') }
-    }
+    //from(zipTree(configurations.userGuideStyleSheets.singleFile)) {
+    //    // Remove the prefix
+    //    eachFile { fcd -> fcd.path = fcd.path.replaceFirst('^docbook-xsl-[0-9\\.]+/', '') }
+    //}
 }
 
 task samplesDocbook(type: AssembleSamplesDocTask) {
@@ -325,7 +327,8 @@ task userguide {
 }
 
 task docs {
-    dependsOn javadoc, groovydoc, userguide, distDocs, samplesDocs, dslHtml
+//    dependsOn javadoc, groovydoc, userguide, distDocs, samplesDocs, dslHtml
+    dependsOn javadoc, groovydoc
     description = 'Generates all documentation'
     group = 'documentation'
 }
