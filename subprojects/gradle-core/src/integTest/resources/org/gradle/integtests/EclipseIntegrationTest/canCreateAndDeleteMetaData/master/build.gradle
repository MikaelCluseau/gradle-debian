import org.custommonkey.xmlunit.Diff
import org.custommonkey.xmlunit.ElementNameAndAttributeQualifier
import org.custommonkey.xmlunit.XMLAssert

buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath 'xmlunit:xmlunit:1.3'
    }
}

defaultTasks 'eclipse', 'cleanEclipse'

allprojects {
    apply plugin: 'eclipse'
}

subprojects {
    apply plugin: 'java'

    repositories {
        mavenCentral()
    }

    dependencies {
        testCompile 'junit:junit:4.7'
    }

    group = 'org.gradle'
    version = '1.0'

    eclipseClasspath {
        downloadJavadoc = true
        doLast {
            compareXmlWithIgnoringOrder(file("$rootDir/../expectedFiles/${project.name}Classpath.xml").text,
                    file(".classpath").text)
        }
    }
}

allprojects {
    eclipseProject.doLast {
        compareXmlWithIgnoringOrder(file("$rootDir/../expectedFiles/${project.name}Project.xml").text,
                file(".project").text)
    }
    cleanEclipse.doLast {
        assert !file(".classpath").isFile()
        assert !file(".project").isFile()
    }
}

void compareXmlWithIgnoringOrder(String expectedXml, String actualXml) {
    Diff diff = new Diff(expectedXml, actualXml)
    diff.overrideElementQualifier(new ElementNameAndAttributeQualifier())
    XMLAssert.assertXMLEqual(diff, true);
}

String getExpectedXml(Project subProject, String filename) {
    def cache = new File(gradle.gradleUserHomeDir, "/cache")
    def path = org.gradle.plugins.idea.model.Path.getRelativePath(subProject.projectDir, '$MODULE_DIR$', cache)
    return rootProject.file("expectedFiles/$filename").text.replace('@CACHE_DIR@', path)
}

